@model WebApplication1.store
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            <label>Store Name</label>
     
            @Html.TextBoxFor(x=>x.Name,new {@class= "form-control" })

        </div>
       

    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label>Location Name</label>
           
           
            @Html.TextBoxFor(x => x.Location, new { @class = "form-control" })
        </div>
       

    </div>
</div>
<div class="row">

    <div class="col-sm-12">
        <div class="form-group">
            <label class="control-label">Images <span class="required">*</span></label>

            <div>
                <style>
                    .thumb {
                        height: 75px;
                        border: 1px solid #000;
                        margin: 10px 5px 0 0;
                    }
                </style>

                <input type="file" class="form-control" id="files" name="inputfile" multiple accept="image/*" />
                <script>
                    function handleFileSelect(evt) {
                        var files = evt.target.files; // FileList object

                        // Loop through the FileList and render image files as thumbnails.
                        for (var i = 0, f; f = files[i]; i++) {

                            // Only process image files.
                            if (!f.type.match('image.*')) {
                                continue;
                            }

                            var reader = new FileReader();

                            // Closure to capture the file information.
                            reader.onload = (function (theFile) {
                                return function (e) {
                                    // Render thumbnail.
                                    var span = document.createElement('span');
                                    span.innerHTML = [
                                        '<img alt="Janere" class="thumb" src="', e.target.result,
                                        '" title="', escape(theFile.name), '"/>'
                                    ].join('');
                                    document.getElementById('list').insertBefore(span, null);
                                };
                            })(f);

                            // Read in the image file as a data URL.
                            reader.readAsDataURL(f);
                        }
                    }

                    document.getElementById('files').addEventListener('change', handleFileSelect, false);
                </script>

            </div>
            <div>
                <output id="list"></output>
            </div>
            <div>
                <output>
                    @{
                        if (!string.IsNullOrEmpty(Model.UrlImage))
                        {
                            
                            <span style="position: relative">
                                <input type="hidden" name="urlimage" id="hdImage" value="@Model.UrlImage" />


                                @if (!string.IsNullOrEmpty(Model.UrlImage))
                                {
                                    <i class="delete_action fa fa-times" rel="@Model.UrlImage" style="position: absolute; right: 0px; top: -30px; cursor: pointer;"></i>

                                    <img alt="Janere" class="thumb" src="@Model.UrlImage">

                                }
                                else
                                {

                                    <img alt="Janere" class="thumb" src="~/Content/ProductImage/notavailable.jpg" />

                                }
                            </span>
                        }


                    }
                </output>
            </div>

        </div>

        <div class="form-group">
            <label>Description</label>

            @Html.TextAreaFor(x => x.Description, new {@class = "form-control"})

        </div>

    </div>
</div>


@Html.HiddenFor(x=>x.Id)

<script>

        $('#validation-form').validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            ignore: "",
            rules: {
                Name: {
                    required: true
                },
                Location: {
                    required: true

                }


            },

            messages: {
                Name: "Store Name do not empty",
                Location: "Location Name do not empty"


            },


            highlight: function (e) {

                if ($(e).is('.file-upload')) {
                    $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
                } else {
                    $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                }


            },

            success: function (e) {
                if ($(e).is('.file-upload')) {
                    $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                    $(e).parents('div').eq(1).find('.form-group .help-block').remove();
                }
                else {
                    $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                    $(e).closest('.form-group').find('.help-block').remove();
                }

            },

            errorPlacement: function (error, element) {

                if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else if (element.is('.select2') || element.is('.js-select2-1')) {
                    if (element.parents('div').eq(0).is('.input-group')) {
                        error.insertAfter(element.parents('div').eq(0));
                    } else {
                        error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                    }


                }
                else if (element.is('.file-upload')) {
                    error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
                }
                else if (element.is('.chosen-select')) {
                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                }
                else error.insertAfter(element);
            },

            submitHandler: function (form) {
            },
            invalidHandler: function (form) {
            }
        });


</script>