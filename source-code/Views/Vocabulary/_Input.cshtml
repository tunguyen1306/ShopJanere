@using System.Configuration
@using WebApplication1.Models
@model AllModel
@{
    veebdbEntities db = new veebdbEntities();
    var listLanguge = db.countries.Where(x => x.status == 1).ToList();
    var indexT = 1;
    var indexT1 = 1;
}


<ul class="nav nav-tabs">
    @foreach (var item in listLanguge)
    {
        <li class="@(indexT == 1 ? "active" : "")"><a data-toggle="tab" href="#@item.language">@item.language</a></li>
        indexT++;
    }
   
   
</ul>

<div class="tab-content">
   
    @foreach (var item in listLanguge)
    {
        var guid = Guid.NewGuid().ToString();
       
        <input type="hidden" name="tblVocabularyArray.Index" value="@(guid)" />
        <div id="@item.language" class="tab-pane fade in @(indexT1 == 1 ? "active" : "")">

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label>Vocabulary Code @item.language</label>
                        <input type="text" class="form-control" name="tblVocabularyArray[@(guid)].code" value="@Model.tblVocabulary.code"/>
                        <input type="hidden" value="@item.language" name="tblVocabularyArray[@(guid)].language"/>

                    </div>
                    <div class="form-group">
                        <label>Vocabulary Name @item.language</label>
                        <input type="text" class="form-control" name="tblVocabularyArray[@(guid)].name" value="@Model.tblVocabulary.name"/>
                    </div>


                </div>
                <div class="col-sm-6">

                    <div class="form-group">
                        <label>Vocabulary Description @item.language</label>


                        <textarea id="des_@item.id" name="tblVocabularyArray[@(guid)].description" class="form-control">@Model.tblVocabulary.description</textarea>
                    </div>

                </div>
            </div>


        </div>
        indexT1++;
    }
</div> 




<script>

        $('#validation-form').validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            ignore: "",
            rules: {
                name: {
                    required: true
                }


            },

            messages: {
                name: "Setting Type Name do not empty"



            },


            highlight: function (e) {

                if ($(e).is('.file-upload')) {
                    $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
                } else {
                    $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
                }


            },

            success: function (e) {
                if ($(e).is('.file-upload')) {
                    $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                    $(e).parents('div').eq(1).find('.form-group .help-block').remove();
                }
                else {
                    $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                    $(e).closest('.form-group').find('.help-block').remove();
                }

            },

            errorPlacement: function (error, element) {

                if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else if (element.is('.select2') || element.is('.js-select2-1')) {
                    if (element.parents('div').eq(0).is('.input-group')) {
                        error.insertAfter(element.parents('div').eq(0));
                    } else {
                        error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                    }


                }
                else if (element.is('.file-upload')) {
                    error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
                }
                else if (element.is('.chosen-select')) {
                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                }
                else error.insertAfter(element);
            },

            submitHandler: function (form) {
            },
            invalidHandler: function (form) {
            }
        });


</script>