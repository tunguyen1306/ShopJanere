@using System.Configuration
@model WebApplication1.item
    @{
         veebdbEntities db = new veebdbEntities();
    }

@Html.TextBoxFor(x => x.ARTNAME, new { @class = "form-control", @placeholder = "Product Name" })
<span>Link: http://shop.janere.ee/product?Code=123456</span>

<div class="product_group">
    <label>Category</label>
    <div class="row">
        <div class="col-sm-6">@Html.DropDownListFor(x=>x.CATEGORYNO, new SelectList(((List<category>)ViewBag.CategoryList), "CATEGORYNO", "CATEGORYNAME", "Select Category"), new { @class = "form-control select2" })</div>
    </div>


</div>
<div class="product_group">
    <label>Product Group</label>
    <div class="row">
        <div class="col-sm-6">@Html.DropDownList("GROUPNO", new SelectList(((List<metagrup>)ViewBag.MetaGroupList), "METAGROUPNO", "METAGROUPNAME","Select Meta Group"), new { @class = "form-control select2" })</div>
        <div class="col-sm-6"></div>
    </div>
    <div class="row">
        <div class="col-sm-12" id="showGroupByIdMeta">
          @{Html.RenderAction("_pGetGroupByIdMeta", "Product");}
        </div>
      
    </div>

</div>

<style>
    .thumb {
        height: 150px;
        border: 1px solid #000;
        margin: 10px 5px 0 0;
    }

    .uploadPhoto {
        cursor: pointer;
        color: #245d92;
        text-decoration: none;
        font-weight: normal;
    }

    #upload-photo {
        opacity: 0;
        position: absolute;
        z-index: -1;
    }

    .btnDeleteImg {
        position: absolute;
        top: -5px;
        right: 15px;
    }

    .cusDiv {
        text-align: center;
    }
</style>
<div class="product_group">
    <label>Product Image</label>
    <div class="row">

        <div class="col-sm-9">
            <ul class="sub_action">
                <li class="active"><a href="#">Upload</a></li>
                <li>

                    <label for="upload-photo" class="uploadPhoto">Choose from libaray</label>
                   
                    <input type="file" name="inputfile" id="upload-photo" multiple accept="image/*" />
                </li>
            </ul>
        </div>

    </div>
    <div class="row">
        <script>
            function handleFileSelect(evt) {
                var files = evt.target.files; // FileList object

                // Loop through the FileList and render image files as thumbnails.
                for (var i = 0, f; f = files[i]; i++) {

                    // Only process image files.
                    if (!f.type.match('image.*')) {
                        continue;
                    }

                    var reader = new FileReader();

                    // Closure to capture the file information.
                    reader.onload = (function (theFile) {
                        return function (e) {
                            // Render thumbnail.
                            var span = document.createElement('div');
                            span.setAttribute("class", "col-sm-2 cusDiv");
                            span.innerHTML = [
                                '  <a class="delete_action btnDeleteImg" rel="0"><i class="fas fa-times"></i></a><img class="thumb" src="', e.target.result, '" title="', escape(theFile.name), '"/> '
                            ].join('');
                            
                            document.getElementById('list').insertBefore(span, null);
                            $(".delete_action").on('click', function (e) {
                                var rs = confirm('Bạn muốn xóa hình này?');
                                if (rs == true) {
                                    $(this).parents('div').eq(0).remove();
                                }

                            });
                        };
                    })(f);

                    // Read in the image file as a data URL.
                    reader.readAsDataURL(f);
                }
            }

            document.getElementById('upload-photo').addEventListener('change', handleFileSelect, false);
        </script>

        <output id="list"></output>
        <output>

            @{
                var listPicture = db.artlinks.Where(x => x.ARTNO == Model.ARTNO).ToList();
                foreach (var item in listPicture)
                {
                    if (!string.IsNullOrEmpty(item.LINK))
                    {

                        <div class="col-sm-2 cusDiv">
                            <a class="delete_action btnDeleteImg" rel="@item.LINENO"><i class="fas fa-times"></i></a>
                            <img class="thumb" src="@item.LINK" title="24FB2DC8-3D38-4171-9FA2-695EA9C937CE.jpg">
                        </div>
                    }
                }



            }
        </output>

    </div>


</div>
<div class="product_group">
    
    <div class="row">
        <div class="col-sm-6">
            <label>EXPOR TABLE</label>
            @Html.DropDownListFor(c => c.EXPORTABLE, new List<SelectListItem> {new SelectListItem {Text = "True", Value = "T"}, new SelectListItem {Text = "False", Value = "F" ,Selected = true}}, new {@class = "form-control select2"})
        </div>
        <div class="col-sm-6">
            <label>STOCK ITEM</label>
            @Html.DropDownListFor(c => c.STOCKITEM, new List<SelectListItem> { new SelectListItem { Text = "True", Value = "T" }, new SelectListItem { Text = "False", Value = "F" ,Selected = true } }, new { @class = "form-control select2" })


        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <label>SPECIAL OFFER</label>
            @Html.DropDownListFor(c => c.SPECIALOFFER, new List<SelectListItem> { new SelectListItem { Text = "True", Value = "T" }, new SelectListItem { Text = "False", Value = "F" ,Selected = true} }, new { @class = "form-control select2" })
        </div>
        <div class="col-sm-6">
            <label>AUTHORIZABLE</label>
            @Html.DropDownListFor(c => c.AUTHORIZABLE, new List<SelectListItem> { new SelectListItem { Text = "True", Value = "T" }, new SelectListItem { Text = "False", Value = "F" ,Selected = true } }, new { @class = "form-control select2" })


        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <label>RESTRICTED</label>
            @Html.DropDownListFor(c => c.RESTRICTED, new List<SelectListItem> {new SelectListItem {Text = "True", Value = "T"}, new SelectListItem {Text = "False", Value = "F" ,Selected = true}}, new {@class = "form-control select2"})
        </div>
        <div class="col-sm-6">
            <label>NOTPOST</label>
            @Html.DropDownListFor(c => c.NOTPOST, new List<SelectListItem> {new SelectListItem {Text = "True", Value = "T"}, new SelectListItem {Text = "False", Value = "F" ,Selected = true}}, new {@class = "form-control select2"})


        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <label>NOTADDPOSTAGEFEE</label>
            @Html.DropDownListFor(c => c.NOTADDPOSTAGEFEE, new List<SelectListItem> { new SelectListItem { Text = "True", Value = "T" }, new SelectListItem { Text = "False", Value = "F" ,Selected = true } }, new { @class = "form-control select2" })
        </div>
        <div class="col-sm-6">
           

        </div>
    </div>
</div>

<div class="product_group">
    <label>Product Detail</label>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group">

                @Html.TextBoxFor(x => x.WIDTH, new {@class = "form-control" , @placeholder = "WIDTH" })

            </div>

            <div class="form-group">

                @Html.TextBoxFor(x => x.WEIGHT, new { @class = "form-control", @placeholder = "WEIGHT" })

            </div>
         
      

        </div>
        <div class="col-sm-6">
          
            <div class="form-group">

                @Html.TextBoxFor(x => x.HEIGHT, new { @class = "form-control", @placeholder = "HEIGHT" })

            </div>

            <div class="form-group">

                @Html.TextBoxFor(x => x.LEN, new { @class = "form-control", @placeholder = "LEN" })

            </div>

        </div>
    </div>
</div><!-- product_detail -->
@Html.HiddenFor(x=>x.ARTNO)
<script>
    $(".delete_action").on('click', function (e) {
        var rs = confirm('Bạn muốn xóa hình này?');
        if (rs == true) {
            $(this).parents('div').eq(0).remove();
        }
        var idPic = $(this).attr('rel');
        if (idPic!=0) {
            $.get('@Url.Action("DeleteImg", "Product")?id=' + idPic, function (data) {

              
            });
        }

    });
    $('#GROUPNO').on('change', function () {
        var id = $(this).val();
        onPageChange(id);
    });
    function onPageChange(el) {

        $.get('@Url.Action("_pGetGroupByIdMeta", "Product")?id=' + el, function (data) {
            $('#showGroupByIdMeta').html(data);

        });
    }
    $('#validation-form').validate({
        errorElement: 'div',
        errorClass: 'help-block',
        focusInvalid: false,
        ignore: "",
        rules: {
            ARTNAME: {
                required: true
            }



        },

        messages: {
            ARTNAME: "Product Name do not empty"

        },


        highlight: function (e) {

            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
            } else {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            }


        },

        success: function (e) {
            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                $(e).parents('div').eq(1).find('.form-group .help-block').remove();
            }
            else {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).closest('.form-group').find('.help-block').remove();
            }

        },

        errorPlacement: function (error, element) {

            if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                var controls = element.closest('div[class*="col-"]');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2') || element.is('.js-select2-1')) {
                if (element.parents('div').eq(0).is('.input-group')) {
                    error.insertAfter(element.parents('div').eq(0));
                } else {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }


            }
            else if (element.is('.file-upload')) {
                error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
        },
        invalidHandler: function (form) {
        }
    });
</script>