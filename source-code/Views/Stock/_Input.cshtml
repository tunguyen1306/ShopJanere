@using System.Configuration
@model WebApplication1.Models.AllModel
<div class="row">
    <div class="col-sm-6">
        
        <div class="form-group">
            <label>VOLUME</label>

            @Html.TextBoxFor(x => x.tblStock.VOLUME, new { @class = "form-control" })

        </div>
        <div class="form-group">
            <label>Size No</label>

            @Html.TextBoxFor(x => x.tblStock.SIZENO, new { @class = "form-control" })

        </div>



    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label>Product</label>

            @Html.DropDownListFor(m => m.tblStock.ARTNO, new SelectList(((List<item>)ViewBag.ListProduct), "ARTNO", "ARTNAME", "Select  Product"), new { @class = "form-control select2" })


            @*<input type="text" id="ARTNO" placeholder="Search Product"  value="@Model.tblitem.ARTNAME" class="form-control" />*@
    

        </div>
        <div class="form-group">
            <label>Ware House</label>

            @*<input type="text" id="STOCKNO" placeholder="Search Ware House"  value="@Model.tblStockCod.STOCKNAME" class="form-control"/>*@
         
            @Html.DropDownListFor(m => m.tblStock.STOCKNO, new SelectList(((List<stockcod>)ViewBag.ListWareHouse), "STOCKNO", "STOCKNAME", "Select  Ware House"), new { @class = "form-control select2" })


        </div>





    </div>
</div>

@Html.HiddenFor(x => x.tblStock.LINENO)

<script>


 

  
    $('#validation-form').validate({
        errorElement: 'div',
        errorClass: 'help-block',
        focusInvalid: false,
        ignore: "",
        rules: {
            VOLUME: {
                required: true
            },
            ARTNO: {
                required: true
            },
            STOCKNO: {
                required: true
            }


        },

        messages: {
            VOLUME: "VOLUME  do not empty",
            STOCKNO: "Select Ware House ",
            ARTNO: "Select Product"


        },


        highlight: function (e) {

            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
            } else {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            }


        },

        success: function (e) {
            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                $(e).parents('div').eq(1).find('.form-group .help-block').remove();
            }
            else {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).closest('.form-group').find('.help-block').remove();
            }

        },

        errorPlacement: function (error, element) {

            if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                var controls = element.closest('div[class*="col-"]');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2') || element.is('.js-select2-1')) {
                if (element.parents('div').eq(0).is('.input-group')) {
                    error.insertAfter(element.parents('div').eq(0));
                } else {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }


            }
            else if (element.is('.file-upload')) {
                error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
        },
        invalidHandler: function (form) {
        }
    });


</script>