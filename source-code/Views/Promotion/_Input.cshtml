@using System.Configuration
@model WebApplication1.promotion
<div class="row">
    <div class="col-sm-6">
        <div class="form-group">
            <label>Code</label>

            @Html.TextBoxFor(x => x.PROMOTIONCODE, new { @class = "form-control" })

        </div>
        <div class="form-group">
            <label>Promotion Name</label>

            @Html.TextBoxFor(x => x.PROMOTIONNAME, new {@class = "form-control"})

        </div>
      
        <div class="form-group">
            <label>Value</label>

            @Html.TextBoxFor(x => x.VALUEPROMOTION, new { @class = "form-control" })

        </div>

  
    </div>
    <div class="col-sm-6">
        
        <div class="form-group">
            <label>From Date</label>

            @Html.TextBoxFor(x => x.FIRSTDATE, "{0:dd/MM/yyyy}", new {@class = "form-control date-picker"})

        </div>
        <div class="form-group">
            <label>To Date</label>

            @Html.TextBoxFor(x => x.LASTDATE, "{0:dd/MM/yyyy}", new {@class = "form-control date-picker"})

        </div>


        <div class="form-group">
            <label>Type</label>

            @Html.DropDownListFor(c => c.TYPENO, new List<SelectListItem> { new SelectListItem { Text = "Price", Value = "1" }, new SelectListItem { Text = "Percent", Value = "0", Selected = true } }, new { @class = "form-control" })

        </div><div class="form-group">
            <label>Status</label>


            @Html.DropDownListFor(c => c.STATUS, new List<SelectListItem> { new SelectListItem { Text = "True", Value = "1" }, new SelectListItem { Text = "False", Value = "0", Selected = true } }, new { @class = "form-control" })


        </div>


    </div>

           
    </div>
<div class="row">
    <div class="col-sm-12">
        <div class="form-group">
            <label>Applies to</label>
            @Html.DropDownList("usertypes", new List<SelectListItem> {
                   new SelectListItem { Text = "None", Value = "1" },
                   new SelectListItem { Text = "Basic", Value = "2" },
                   new SelectListItem { Text = "Vip", Value = "3" },
                   new SelectListItem { Text = "Primeum", Value = "4"} }, new { @class = "form-control ", @multiple = "multiple" })
            <script type="text/javascript">
            setTimeout(function () {

                $("#usertypes").val("@(Model.TYPEUSERS)".split(',')).select2({ placeholder: "Choose type to apply" });;
                        }, 200);

            </script>
        </div>
    </div>
</div>
<div class="row">

    <div class="col-sm-6">
     
        @*<div class="form-group">
            <label class="control-label">Images <span class="required">*</span></label>

            <div>
                <style>
                    .thumb {
                        height: 75px;
                        border: 1px solid #000;
                        margin: 10px 5px 0 0;
                    }
                </style>

                <input type="file" class="form-control" id="files" name="files" multiple accept="image/*" />
                <script>
                    function handleFileSelect(evt) {
                        var files = evt.target.files; // FileList object

                        // Loop through the FileList and render image files as thumbnails.
                        for (var i = 0, f; f = files[i]; i++) {

                            // Only process image files.
                            if (!f.type.match('image.*')) {
                                continue;
                            }

                            var reader = new FileReader();

                            // Closure to capture the file information.
                            reader.onload = (function (theFile) {
                                return function (e) {
                                    // Render thumbnail.
                                    var span = document.createElement('span');
                                    span.innerHTML = [
                                        '<img alt="Janere" class="thumb" src="', e.target.result,
                                        '" title="', escape(theFile.name), '"/>'
                                    ].join('');
                                    document.getElementById('list').insertBefore(span, null);
                                };
                            })(f);

                            // Read in the image file as a data URL.
                            reader.readAsDataURL(f);
                        }
                    }

                    document.getElementById('files').addEventListener('change', handleFileSelect, false);
                </script>

            </div>
            <div>
                <output id="list"></output>
            </div>
            <div>
                <output>
                    @{
                        if (!string.IsNullOrEmpty(Model.urlimage))
                        {

                            <span style="position: relative">
                                <input type="hidden" name="urlimage" id="hdImage" value="@Model.urlimage" />
                                <i class="delete_action fa fa-times" style="position: absolute; right: 0px; top: -30px; cursor: pointer;"></i>
                                <img alt="Janere" class="thumb" src="@Model.urlimage" title="">
                            </span>
                        }


                    }
                </output>
            </div>

        </div>*@

    </div>

    <div class="col-sm-6">
      


    </div>



</div>


@Html.HiddenFor(x=>x.PROMOTIONNO)

<script>
  


    

    $(".delete_action").on('click', function (e) {
        var rs = confirm('Do you want to remove this image ?');
        if (rs == true) {
            $(this).parents('div').eq(0).remove();
        }
        

    });
    $('#validation-form').validate({
        errorElement: 'div',
        errorClass: 'help-block',
        focusInvalid: false,
        ignore: "",
        rules: {
            name: {
                required: true
            },
            typeId: {
                required: true
            }


        },

        messages: {
            name: "Promotion Name do not empty",
            typeId: "Select type"


        },


        highlight: function (e) {

            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
            } else {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            }


        },

        success: function (e) {
            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                $(e).parents('div').eq(1).find('.form-group .help-block').remove();
            }
            else {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).closest('.form-group').find('.help-block').remove();
            }

        },

        errorPlacement: function (error, element) {

            if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                var controls = element.closest('div[class*="col-"]');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2') || element.is('.js-select2-1')) {
                if (element.parents('div').eq(0).is('.input-group')) {
                    error.insertAfter(element.parents('div').eq(0));
                } else {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }


            }
            else if (element.is('.file-upload')) {
                error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element);
        },

        submitHandler: function (form) {
        },
        invalidHandler: function (form) {
        }
    });


</script>