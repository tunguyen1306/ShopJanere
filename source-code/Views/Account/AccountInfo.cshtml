@model WebApplication1.Models.AllModel
@{
    ViewBag.Title = "EditInfo";
    Layout = "~/Views/Shared/_AdminAccount.cshtml";

}
<h2>Update Profile Info</h2>
<!-- /.row -->
<div class="row">
    <div class="col-lg-12">

        <div id="main_content" class="col-sm-12 checkout_page">

            <div class="product_content">
                @using (Html.BeginForm("AccountInfo", "Account", FormMethod.Post, new { enctype = "multipart/form-data", @id = "validation-form" }))
                {


                    @Html.HiddenFor(model => model.tblUser.Id)
                    @Html.HiddenFor(model => model.tblUserData.Id)
                    <div class="row">
                        <div class="col-sm-4">
                            <h3>CONTACT INFO</h3>
                            <div class="form-group">
                                <label>Display Name</label>
                                @Html.TextBoxFor(x => x.tblUser.display, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Firsname</label>
                                @Html.TextBoxFor(x => x.tblUserData.firstname, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Lastname</label>
                                @Html.TextBoxFor(x => x.tblUserData.lasname, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label>Email</label>
                                @Html.TextBoxFor(x => x.tblUser.email, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Phone</label>
                                @Html.TextBoxFor(x => x.tblUserData.contact_phone, new { @class = "form-control checkNumber" })
                            </div>
                        </div>
                        <div class="col-sm-4">
                            <h3>DELIVERY INFO</h3>
                            <div class="form-group">
                                <label>Company Name</label>
                                @Html.TextBoxFor(x => x.tblUserData.company_name, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Name</label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_name, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Email</label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_email, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Phone</label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_phone, new { @class = "form-control checkNumber" })
                            </div>
                            <div class="form-group">
                                <label>Address Line 1</label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_address1, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Address Line 2</label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_address2, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Suburd </label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_suburb, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Post Code </label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_postcode, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>State </label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_state, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Contry </label>
                                @Html.TextBoxFor(x => x.tblUserData.delivery_contry, new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="col-sm-4">
                            <h3>BILLING INFO</h3>
                            <div class="form-group">
                                <label>Name</label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_name, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Email</label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_email, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Phone</label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_phone, new { @class = "form-control checkNumber" })
                            </div>
                            <div class="form-group">
                                <label>Address Line 1</label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_address1, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Address Line 2</label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_address2, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Suburd </label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_suburb, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Post Code </label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_poscode, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>State </label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_state, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>Contry </label>
                                @Html.TextBoxFor(x => x.tblUserData.billing_country, new { @class = "form-control" })
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label></label>

                            </div>
                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label></label>
                                <input type="submit" class="btn btn-default" value="Save" id="submitbutton" name="save_product">
                                <a href="@Url.Action("Index","AccountLogin")">Cancel</a>
                            </div>

                        </div>
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label></label>

                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">


                        </div>
                        <div class="form-group">

                            @if (((int)ViewBag.Notification) == 1)
                            {
                                <div class="alert alert-success " role="alert">
                                    <strong>
                                        <i class="fa fa-check-circle" aria-hidden="true"></i>Success:
                                    </strong>
                                    <div class="show-alert-success">Update  success</div>
                                </div>
                            }
                            else if (((int)ViewBag.Notification) == 0)
                            {
                                <div class="alert alert-danger " role="alert">
                                    <strong>
                                        <i class="fa fa-exclamation-triangle" aria-hidden="true"></i> Error!
                                    </strong>
                                    <div class="show-alert">Update failed</div>
                                </div>
                            }
                        </div>

                    </div>
                }

            </div><!-- product_content -->

        </div><!-- main_content -->


    </div>
</div>
<script>

    $("#submitbutton").on('click', function (e) {
        e.preventDefault();
        if ($('#validation-form').valid()) {
            $('#validation-form')[0].submit();
        }
    });
    $('#validation-form').validate({
        errorElement: 'div',
        errorClass: 'help-block',
        focusInvalid: false,
        ignore: "",
        rules: {
   
            'tblUser.display': {required: true},
            'tblUserData.delivery_email': { required: true },
            'tblUserData.delivery_address1': { email: true, required: true },
            'tblUserData.delivery_name': { required: true },
            'tblUserData.delivery_phone': { required: true },
            'tblUserData.contact_phone': { required: true },
            'tblUserData.firstname': {required: true},
            'tblUser.email': {email: true,required: true}
          



        },

        messages: {
            tblUser: {
                'tblUser.display': "Display name do not empty",
                'tblUserData.delivery_address1': "Address do not empty",
                'tblUserData.delivery_email': { required: "Email do not empty", 'tblUserData.delivery_email': "Please enter a valid email address." },
                'tblUserData.delivery_name': "Delivery name do not empty",
                'tblUserData.contact_phone': "Phone do not empty",
                'tblUserData.delivery_phone': "Delivery phone do not empty",
                'tblUser.email': { required: "Email do not empty", 'tblUser.email': "Please enter a valid email address." },
                'tblUserData.firstname': "First Name do not empty"
            }


        },


        highlight: function (e) {

            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-info').addClass('has-error');
            } else {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            }


        },

        success: function (e) {
            if ($(e).is('.file-upload')) {
                $(e).parents('div').eq(1).find('.form-group').removeClass('has-error').addClass('has-info');
                $(e).parents('div').eq(1).find('.form-group .help-block').remove();
            } else {
                $(e).closest('.form-group').removeClass('has-error').addClass('has-info');
                $(e).closest('.form-group').find('.help-block').remove();
            }

        },

        errorPlacement: function (error, element) {

            if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                var controls = element.closest('div[class*="col-"]');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            } else if (element.is('.select2') || element.is('.js-select2-1')) {
                if (element.parents('div').eq(0).is('.input-group')) {
                    error.insertAfter(element.parents('div').eq(0));
                } else {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }


            } else if (element.is('.file-upload')) {
                error.insertAfter(element.parents('div').eq(1).find('.file-caption-main'));
            } else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            } else error.insertAfter(element);
        },

        submitHandler: function (form) {
        },
        invalidHandler: function (form) {
        }
    });
</script>
